{"version":3,"sources":["../../src/search/memberSocialLinks.js"],"names":["formatLinks","platform","acc","curr","link","name","linkedText","newLine","pluckGetTitle","attributes","title","byName","a","b","byPlatform","response","getTitleFor","getMemberSocialLinksFor","responses"],"mappings":";;;;;;AAAA;;AAEA;;AACA;;;;AAEA;;AAEA,IAAMA,cAAc,kBAAM,UAACC,QAAD,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACjD,MAAMC,OAAOD,KAAKF,QAAL,CAAb;AACA,MAAMI,OAAOF,KAAKE,IAAlB;AACA,MAAMC,aAAaD,KAAKD,IAAL,CAAUA,IAAV,CAAnB;AACA,MAAMG,UAAU,IAAhB;;AAEA,SAAOL,MAAMI,UAAN,GAAmBC,OAA1B;AACD,CAPmB,CAApB;;AASA,IAAMC,gBAAgB,kBACpB,UAACC,UAAD,EAAaR,QAAb;AAAA,SAA0BQ,WAAWR,QAAX,EAAqBS,KAA/C;AAAA,CADoB,CAAtB;;AAIA,IAAMC,SAAS,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUA,EAAER,IAAF,GAASO,EAAEP,IAArB;AAAA,CAAf;;AAEA,IAAMS,aAAa,kBAAM,UAACb,QAAD,EAAWc,QAAX;AAAA,SAAwBA,SAASd,QAAT,CAAxB;AAAA,CAAN,CAAnB;;AAEA;;AAEA;AACA,IAAMe,cAAc,SAAdA,WAAc,CAACf,QAAD;AAAA,SAClB,uCAAkBO,qCAAlB,EAA6CP,QAA7C,EAAuDA,QAAvD,CADkB;AAAA,CAApB;;AAGA,IAAMgB,0BAA0B,SAA1BA,uBAA0B,OAAiBhB,QAAjB;AAAA;AAAA,MAAKiB,SAAL;;AAAA,SAC9B,iBACE,mBAAOJ,WAAWb,QAAX,CAAP,CADF,EAEE,iBAAKU,MAAL,CAFF,EAGE,mBAAOX,YAAYC,QAAZ,CAAP,EAA8Be,YAAYf,QAAZ,CAA9B,CAHF,EAIEiB,SAJF,CAD8B;AAAA,CAAhC;;kBAOeD,uB","file":"memberSocialLinks.js","sourcesContent":["import { pipe, curry, sort, filter, reduce } from 'ramda';\n\nimport { toTitleCase } from '../utils/helpers.js';\nimport { attributes } from '../utils/attributes.js';\n\n// ********************************\n\nconst formatLinks = curry((platform, acc, curr) => {\n  const link = curr[platform];\n  const name = curr.name;\n  const linkedText = name.link(link);\n  const newLine = '\\n';\n\n  return acc + linkedText + newLine;\n});\n\nconst pluckGetTitle = curry(\n  (attributes, platform) => attributes[platform].title\n);\n\nconst byName = (a, b) => b.name < a.name;\n\nconst byPlatform = curry((platform, response) => response[platform]);\n\n// ********************************\n\n// getTitleFor returns a function that uses platform as an argument\nconst getTitleFor = (platform) =>\n  pipe(toTitleCase, pluckGetTitle(attributes))(platform)(platform);\n\nconst getMemberSocialLinksFor = ([...responses], platform) =>\n  pipe(\n    filter(byPlatform(platform)),\n    sort(byName),\n    reduce(formatLinks(platform))(getTitleFor(platform))\n  )(responses);\n\nexport default getMemberSocialLinksFor;\n"]}