{"version":3,"sources":["../../src/search/byRole.js"],"names":["aToZ","a","b","getName","response","name","trim","byRole","targetRole","rolecategory","includes","getMembersByRole","responses"],"mappings":";;;;;;AAAA;;AAEA;;;;;;;;AAEA,IAAMA,OAAO,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUA,IAAID,CAAd;AAAA,CAAb;;AAEA,IAAME,UAAU,SAAVA,OAAU,CAACC,QAAD;AAAA,SAAcA,SAASC,IAAT,CAAcC,IAAd,EAAd;AAAA,CAAhB;;AAEA,IAAMC,SAAS,kBAAM,UAACC,UAAD,EAAaJ,QAAb;AAAA,SACnBA,SAASK,YAAT,CAAsBC,QAAtB,CAA+BF,UAA/B,CADmB;AAAA,CAAN,CAAf;;AAIA,IAAMG,mBAAmB,SAAnBA,gBAAmB,CAACH,UAAD;AAAA;AAAA,MAAiBI,SAAjB;;AAAA,SACvB,iBAAK,mBAAOL,OAAOC,UAAP,CAAP,CAAL,EAAiC,gBAAIL,OAAJ,CAAjC,EAA+C,iBAAKH,IAAL,CAA/C,4BACEY,SADF,CADuB;AAAA,CAAzB;;kBAKeD,gB","file":"byRole.js","sourcesContent":["import { pipe, filter, map, sort, curry } from 'ramda';\n\nimport formatInline from '../utils/inlineKeyboard.js';\n\nconst aToZ = (a, b) => b < a;\n\nconst getName = (response) => response.name.trim();\n\nconst byRole = curry((targetRole, response) =>\n  response.rolecategory.includes(targetRole)\n);\n\nconst getMembersByRole = (targetRole, [...responses]) =>\n  pipe(filter(byRole(targetRole)), map(getName), sort(aToZ), formatInline)(\n    responses\n  );\n\nexport default getMembersByRole;\n"]}